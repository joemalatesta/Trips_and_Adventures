[{"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/index.js":"1","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/App.js":"2","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/reportWebVitals.js":"3","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Nav/index.js":"4","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Body/index.js":"5","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/TitlePage/index.js":"6","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/User/NewUserForm/index.js":"7","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/User/LoginUserForm/index.js":"8","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/NewTripForm/index.js":"9","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/TripContainer/index.js":"10","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/ShowTrip/index.js":"11","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/EditTripForm/index.js":"12","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/TripCard/index.js":"13","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/PostForm/index.js":"14","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/NewPostForm/index.js":"15","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/Posts.js":"16","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/PostCard/index.js":"17"},{"size":499,"mtime":1607132956486,"results":"18","hashOfConfig":"19"},{"size":7281,"mtime":1607377164879,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607047662761,"results":"21","hashOfConfig":"19"},{"size":4265,"mtime":1607375489531,"results":"22","hashOfConfig":"19"},{"size":1863,"mtime":1607376468520,"results":"23","hashOfConfig":"19"},{"size":1302,"mtime":1607275087509,"results":"24","hashOfConfig":"19"},{"size":2617,"mtime":1607202002355,"results":"25","hashOfConfig":"19"},{"size":2121,"mtime":1607202596078,"results":"26","hashOfConfig":"19"},{"size":2583,"mtime":1607373650056,"results":"27","hashOfConfig":"19"},{"size":359,"mtime":1607373736019,"results":"28","hashOfConfig":"19"},{"size":5900,"mtime":1607367282005,"results":"29","hashOfConfig":"19"},{"size":2531,"mtime":1607377200746,"results":"30","hashOfConfig":"19"},{"size":664,"mtime":1607372499992,"results":"31","hashOfConfig":"19"},{"size":1616,"mtime":1607278638061,"results":"32","hashOfConfig":"19"},{"size":1841,"mtime":1607299298053,"results":"33","hashOfConfig":"19"},{"size":4616,"mtime":1607277875113,"results":"34","hashOfConfig":"19"},{"size":452,"mtime":1607286670823,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"m7w90k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/index.js",[],["73","74"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/App.js",["75"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/reportWebVitals.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Nav/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Body/index.js",["76"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/TitlePage/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/User/NewUserForm/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/User/LoginUserForm/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/NewTripForm/index.js",["77"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/TripContainer/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/ShowTrip/index.js",["78","79","80","81","82"],"import React, { Component } from 'react'\nimport { Button, Card } from 'semantic-ui-react'\nimport EditTripForm from '../EditTripForm'\nimport PostForm from '../../Posts/PostForm'\nimport NewPostForm from '../../Posts/NewPostForm'\nimport TripCard from '../TripCard'\nimport PostCard from '../../Posts/PostCard'\nimport Body from '../../Body'\nimport Nav from '../../Nav'\n\nexport default class ShowTrip extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayEditTripForm: false,\n      displayNewPostForm: false,\n    }\n  }\n\n  toggleEditTripForm = () => {\n    this.setState({\n      displayEditTripForm: !this.state.displayEditTripForm\n    })\n  }\n\n  toggleNewPostForm =() => {\n    this.setState({\n      displayNewPostForm: !this.state.displayNewPostForm\n    })\n  }\n\n  deleteTrip = async () => {\n    console.log(this.props.trip.id)\n    try {\n      const url = process.env.REACT_APP_API_URL + '/api/trips/' + this.props.trip.id\n\n      const deleteTripResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'DELETE'\n      })\n      const deleteTripJson = await deleteTripResponse.json()\n\n      if(deleteTripResponse.status === 200) {\n        console.log('Trip DELETED.', deleteTripJson)\n        this.setState({\n          showtrips: false\n        })\n        this.props.removeTrip(this.props.trip.id)\n        this.props.getTrips()\n      }\n    } catch(err) {\n      console.log('ERROR DELETING Trip.', err)\n    }\n\n  }\n\n\n\n  // getTrips = async () => {\n  // try {\n  //   const url = process.env.REACT_APP_API_URL + \"/api/trips/all\"\n  //   console.log(url)\n  //   const tripsResponse = await fetch(url)\n  //   const tripsJson = await tripsResponse.json()\n  //   this.setState({\n  //     trips: tripsJson.data\n  //   })\n  //   console.log(this.state.trips)\n  //\n  //   } catch(err) {\n  //   console.log(\"ERROR RETRIEVING Trip DATA.\", err)\n  //   }\n  // }\n\n\n  // getMyTrips = async () => {\n  //   try {\n  //     const url = process.env.REACT_APP_API_URL + \"/api/trips/\"\n  //\n  //     console.log(url)\n  //\n  //     const tripsResponse = await fetch(url, { credentials: 'include' })\n  //\n  //     const tripsJson = await tripsResponse.json()\n  //\n  //     this.setState({\n  //       trips: tripsJson.data,\n  //       showTrip: !this.state.showTrip\n  //     })\n  //\n  //     console.log(this.state.trips)\n  //\n  //   } catch(err) {\n  //     console.log(\"Error getting trip data.\", err)\n  //   }\n  // }\n\n  // updateTrip = async (updatedTripInfo) => {\n  //   try {\n  //     const url = process.env.REACT_APP_API_URL + '/api/trips/' + this.state.tripIdToEdit\n  //     const updateTripResponse = await fetch(url, {\n  //       credentials: 'include',\n  //       method: 'PUT',\n  //       body: JSON.stringify(updatedTripInfo),\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       }\n  //     })\n  //     const updateTripJson = await updateTripResponse.json()\n  //\n  //     if(updateTripResponse.status === 200) {\n  //       console.log('Trip UPDATED.')\n  //       this.setState({\n  //         trips: updateTripJson.data,\n  //         tripIdToEdit: -1\n  //       })\n  //     }\n  //     this.getMyTrips()\n  //   } catch(err) {\n  //     console.log('ERROR UPDATING Trip.', err)\n  //   }\n  // }\n  //\n  // createPost = async (postToCreate) => {\n  //   console.log(postToCreate)\n  //   console.log(this.props.posts)\n  //   console.log(this.currentUserId)\n  //   try {\n  //     const url = process.env.REACT_APP_API_URL + '/api/posts/'\n  //\n  //     console.log(url)\n  //     console.log(JSON.stringify(postToCreate))\n  //\n  //     const createPostResponse = await fetch(url, {\n  //       method: 'POST',\n  //       body: JSON.stringify(postToCreate),\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       credentials: 'include'\n  //     })\n  //\n  //     console.log(createPostResponse)\n  //\n  //     const createPostJson = await createPostResponse.json()\n  //\n  //     console.log(createPostJson)\n  //\n  //     if (createPostResponse.status === 200 || createPostResponse.status === 201) {\n  //       console.log('Post CREATED')\n  //       this.setState({\n  //         posts: [...this.state.posts, createPostJson.data]\n  //       })\n  //     }\n  //     this.getMyPosts()\n  //   } catch(err) {\n  //     console.log('ERROR CREATING Post', err)\n  //   }\n  // }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card key={this.props.trip.id}  raised={true} color={'blue'} centered={true}>\n          <Card.Content>\n            <Card.Header>{this.props.trip.trip_name}</Card.Header>\n            <Card.Meta>{this.props.trip.trip_date}</Card.Meta>\n            <Card.Description>{this.props.trip.about_trip}</Card.Description>\n            <Card.Meta>{this.props.trip.user.username}</Card.Meta>\n            {\n              this.props.trip.user.id === this.props.currentUserId\n              &&\n                <React.Fragment>\n                  <Button onClick={this.deleteTrip}>DELETE</Button>\n                  <Button onClick={this.toggleEditTripForm}>EDIT</Button>\n                  <Button onClick={this.toggleNewPostForm}>NEW POST</Button>\n                </React.Fragment>\n            }\n          </Card.Content>\n        </Card>\n        {\n          this.state.displayEditTripForm\n          && <EditTripForm\n                trip={this.props.trip}\n                displayEditTripForm={this.state.displayEditTripForm}\n                toggleEditTripForm={this.toggleEditTripForm}\n                updateTrip={this.props.updateTrip}\n              />\n        }\n        {\n          this.state.displayNewPostForm\n          && <NewPostForm\n                trip={this.props.trip}\n                displayNewPostForm={this.state.displayNewPostForm}\n                toggleNewPostForm={this.toggleNewPostForm}\n                createPost={this.createPost}\n              />\n        }\n      </React.Fragment>\n    )\n  }\n}\n","/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/EditTripForm/index.js",["83"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Trip/TripCard/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/PostForm/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/NewPostForm/index.js",[],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/Posts.js",[],["84","85"],"/Users/josephmalatesta/capstone/Trips_and_Adventures/front/trips_and_adventures/src/Posts/PostCard/index.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":185,"column":13,"nodeType":"92","messageId":"93","endLine":185,"endColumn":23},{"ruleId":"90","severity":1,"message":"94","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":11},{"ruleId":"90","severity":1,"message":"96","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"97","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":12},{"ruleId":"90","severity":1,"message":"95","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":11},{"ruleId":"90","severity":1,"message":"100","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"86","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'logoutJson' is assigned a value but never used.","Identifier","unusedVar","'EditTripForm' is defined but never used.","'Nav' is defined but never used.","'PostForm' is defined but never used.","'TripCard' is defined but never used.","'PostCard' is defined but never used.","'Body' is defined but never used.","'ShowTrip' is defined but never used.",["103"],["104"],"no-global-assign","no-unsafe-negation"]